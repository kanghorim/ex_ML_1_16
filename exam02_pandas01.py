# -*- coding: utf-8 -*-
"""exam02_pandas01.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YaxCE8JDiiEBBnjh-6FSyIoTjsZEdmgV

#Pandas 실습

##DataFrame
"""

import pandas as pd

df = pd.DataFrame([[15, '남', '영훈중'],
                   [17, '여', '성암중']],
                   index=['서준', '도연'],
                   columns=['나이', '성별', '학교'])
df

print(df.index)
print(df.columns)

df.index = ['학생1', '학생2']
df.columns = ['연령', '남녀', '소속']
df

df = df.rename(columns={'연령':'나이'})
df

df = df.rename(index={'학생1':'서준', '학생2':'도연'})
df

df1 = df['나이']
df1

df2 = df[['나이']] 
df2

df

df.iloc[0,0]

df.loc['서준', '나이']

"""##데이터 추가 삭제"""

df.loc['진석'] = [18, '남', '신일중']
df.loc['선희'] = [14, '여', '풍문중']
df

df.drop(['진석'], inplace=True, axis='rows')
print(df)

"""##컬럼 추가 삭제"""

df['학년'] = 3
df

df['키'] = [175, 180, 185]
df

df.drop(['학년'], axis='columns', inplace=True)
df

df2 = df.drop(['키'], inplace=False, axis=1)
df2

df

df = df[['남녀', '소속', '나이', '키']]
df

df.loc['서준', '나이':'키']

df.iloc[:, 2:3]

exam_data = {'이름':['경석', '연주', '선희'],
             '수학':[90, 85, 70],
             '영어':[98, 88, 78],
             '음악':[90, 89, 88],
             '체육':[88, 78, 69]}
df = pd.DataFrame(exam_data)
df.set_index('이름', inplace=True)
df

df.shape

df.iloc[0, 3] = 90
df

df.loc['경석', '체육'] = 100
df

df.loc['경석', ['음악', '체육']] = 120, 130
df

df = df.transpose()
df

df = df.T
df

df.loc['선희', '음악'] = 89

ndf1 = df.set_index('음악')
ndf1

ndf1.loc[89]

ndf2 = df.set_index(['음악', '수학'])
ndf2

ndf2.loc[(89, 70)]

ndf2.iloc[1]

ndf3 = df.reset_index()
ndf3

ndf3 = df.reset_index().set_index(['음악'])
ndf3

df

ndf = df.reindex(['경석', '연주', '선희', '덕유', '영림'])
ndf

ndf = df.reindex(['경석', '연주', '선희', '덕유', '영림'],
                 fill_value=0)
ndf

ndf = df.sort_index(ascending=False)
ndf

ndf = df.sort_values(by='영어', ascending=False)
ndf

"""##연산"""

student1 = pd.Series({'국어':float('NaN'), '영어':90})
student1

percentage = student1 / 100
percentage

student2 = pd.Series({'영어':50, '국어':40, '수학':80})
student2

student1 + student2

student1.add(student2, fill_value=0)

df

ndf = df + 100
ndf

ndf - df

"""##파일 입출력"""

df

df.to_csv('./datasets/df_sample.csv')

df = pd.read_csv('./datasets/df_sample.csv', index_col='이름')
df

df.to_csv('./datasets/df_sample1.csv', index=False)

df.reset_index(inplace=True)
df.drop('이름', inplace=True, axis=1)
df

df.to_csv('./datasets/df_sample2.csv')

ndf = pd.read_csv('./datasets/df_sample2.csv')
ndf

df

df.index = ['경석', '연주', '선희']
df

df.to_json('./datasets/df_sample.json')

ndf1 = pd.read_json('./datasets/df_sample.json')
ndf1

df.to_excel('./datasets/df_sample.xlsx')

df2 = pd.read_excel('./datasets/df_sample.xlsx', index_col=0)
df2

tables = pd.read_html('https://www.w3schools.com/html/html_tables.asp')
print(type(tables))
print(len(tables))

tables[0]

tables[1]

df = pd.read_csv('datasets/auto-mpg.csv',
                 names=['mpg', 'cylinders', 'displacement', 'horsepower',
           'weight', 'acceleration', 'model year',
           'origin', 'name'])
print(df)

head = df.head(10)
print(head)

df.tail(10)

df.shape

df.info()

df.dtypes

df.mpg.dtypes

df.describe()

df.describe().T

df.describe(include='all').T

df.count()

unique_value = df['name'].value_counts()
unique_value

unique_values = df['horsepower'].value_counts()
type(unique_values)

print(df.mean())

print(df.mpg.mean())

print(df.std())

print(df.min())

print(df.corr())

